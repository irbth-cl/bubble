<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Bubble: powered by Mercury</title>

<!-- PWA Manifest -->
<link rel="manifest" href="manifest.json">

<!-- Browser Favicon -->
<link rel="icon" type="image/png" sizes="48x48" href="images/logo-48.png">

<!-- Theme Color -->
<meta name="theme-color" content="#ff9a9e">

<style>
body { font-family: 'Poppins', sans-serif; margin:0; padding:0; display:flex; justify-content:center; align-items:center; height:100vh; background:white; overflow:hidden; }

/* LOADING SCREEN */
#loading-screen { position: fixed; top:0; left:0; width:100%; height:100%; display:flex; flex-direction:column; justify-content:center; align-items:center; background:white; z-index:1000; transition: opacity 0.5s ease; }
.loading-title { font-size:2rem; font-weight:600; background:linear-gradient(270deg,#ff9a9e,#fad0c4,#a1c4fd,#c2e9fb,#ff9a9e); background-size:600% 600%; -webkit-background-clip:text; -webkit-text-fill-color:transparent; background-clip:text; animation:bubbleGradient 12s ease infinite; }
.loading-subtitle { font-size:0.9rem; font-weight:300; font-style:italic; color:#777; margin-top:8px; }
.spinner { margin-top:20px; width:20px; height:20px; border:3px solid #ddd; border-top:3px solid #999; border-radius:50%; animation:spin 1s linear infinite; }

@keyframes spin { 0%{transform:rotate(0deg);}100%{transform:rotate(360deg);} }
@keyframes bubbleGradient { 0%{background-position:0% 50%;}50%{background-position:100% 50%;}100%{background-position:0% 50%;} }

/* APP LAYOUT */
.app { display:flex; flex-direction:column; width:100%; max-width:420px; height:100vh; border:1px solid #ddd; border-radius:20px; box-shadow:0 4px 15px rgba(0,0,0,0.1); overflow:hidden; background:white; }
header { position:relative; text-align:center; padding:15px; background:white; box-shadow:0 2px 5px rgba(0,0,0,0.1); }
header .title { font-size:1.8rem; font-weight:600; letter-spacing:1px; background:linear-gradient(270deg,#ff9a9e,#fad0c4,#a1c4fd,#c2e9fb,#ff9a9e); background-size:600% 600%; -webkit-background-clip:text; -webkit-text-fill-color:transparent; background-clip:text; animation:bubbleGradient 12s ease infinite; }
header .subtitle { font-size:0.85rem; font-weight:300; font-style:italic; color:#777; margin-top:3px; letter-spacing:0.5px; }
#settingsIcon { position:absolute; top:15px; right:15px; cursor:pointer; font-size:1.2rem; }

.chat-container { flex:1; padding:15px; display:flex; flex-direction:column; overflow-y:auto; }
.message { max-width:70%; margin:8px 0; padding:10px 15px; border-radius:20px; font-size:0.95rem; line-height:1.4; word-wrap:break-word; position:relative; }
.sent { align-self:flex-end; background:linear-gradient(135deg,#ff9a9e,#fad0c4,#a1c4fd,#c2e9fb); color:white; }
.received { align-self:flex-start; background:#f1f1f1; color:#333; }
.timestamp { font-size:0.7rem; color:#555; position:absolute; bottom:-16px; right:10px; }
.read { font-size:0.7rem; color:#FFD966; position:absolute; bottom:-16px; left:10px; }

.typing-indicator { display:flex; justify-content:flex-start; padding-left:15px; margin-bottom:10px; }
.typing { display:flex; align-items:center; gap:5px; }
.dot { width:8px; height:8px; background:#999; border-radius:50%; animation:blink 1.4s infinite both; }
.dot:nth-child(2){animation-delay:0.2s;} .dot:nth-child(3){animation-delay:0.4s;}
@keyframes blink { 0%,80%,100%{opacity:0;} 40%{opacity:1;} }

.input-area { display:flex; padding:10px; border-top:1px solid #ddd; background:white; }
input { flex:1; border:none; border-radius:20px; padding:10px 15px; font-size:1rem; outline:none; background:white; color:black; box-shadow:0 1px 3px rgba(0,0,0,0.1); }
button { border:none; background:white; color:black; padding:10px 18px; border-radius:20px; font-size:1rem; cursor:pointer; margin-left:8px; transition:0.2s; box-shadow:0 1px 3px rgba(0,0,0,0.1); }
button:hover{background:#f0f0f0;}

/* SETTINGS PANEL */
#settingsPanel { display:none; position:fixed; top:50%; left:50%; transform:translate(-50%,-50%); width:260px; background:white; border-radius:15px; box-shadow:0 4px 15px rgba(0,0,0,0.2); padding:20px; z-index:1001; text-align:center; }
#settingsPanel h3{margin-top:0;}
#recentDevices button{cursor:pointer; border:none; border-radius:8px; background:#f0f0f0; padding:5px; width:100%; margin:2px 0;}
</style>
</head>
<body>
<div id="loading-screen">
  <div class="loading-title">Bubble</div>
  <div class="loading-subtitle">powered by Mercury</div>
  <div class="spinner"></div>
</div>

<div class="app" id="app">
  <header>
    <div class="title">Bubble</div>
    <div class="subtitle">powered by Mercury</div>
    <div id="settingsIcon">⚙️</div>
  </header>

  <div class="chat-container" id="chat"></div>

  <div class="typing-indicator" id="typingIndicator" style="display:none;">
    <div class="typing">
      <div class="dot"></div>
      <div class="dot"></div>
      <div class="dot"></div>
    </div>
  </div>

  <div class="input-area">
    <input type="text" id="messageInput" placeholder="Type a message...">
    <button onclick="sendMessage()">Send</button>
  </div>
</div>

<!-- SETTINGS PANEL -->
<div id="settingsPanel">
  <h3>Settings</h3>
  
  <div style="margin-bottom:10px;">
    <strong>Connection Type:</strong><br>
    <label><input type="radio" name="connection" value="wifiDirect" checked> WiFi Direct</label><br>
    <label><input type="radio" name="connection" value="wifiOnline"> Regular WiFi</label>
  </div>

  <div style="margin-bottom:10px;">
    <strong>Recently Connected Devices:</strong>
    <div id="recentDevices" style="margin-top:5px; max-height:80px; overflow-y:auto; border:1px solid #ddd; border-radius:8px; padding:5px;"></div>
  </div>

  <button onclick="closeSettings()">Close</button>
</div>

<script>
if('serviceWorker' in navigator){
  navigator.serviceWorker.register('service-worker.js').then(()=>console.log('Service Worker registered'));
}

window.addEventListener("load", () => {
  setTimeout(() => {
    const loading = document.getElementById("loading-screen");
    loading.style.opacity = 0;
    setTimeout(()=>{ loading.style.display="none"; }, 500);
  },2000);
});

const settingsIcon=document.getElementById('settingsIcon');
const settingsPanel=document.getElementById('settingsPanel');
settingsIcon.addEventListener('click',()=>{settingsPanel.style.display='block';});
function closeSettings(){settingsPanel.style.display='none';}

let recentDevices=JSON.parse(localStorage.getItem('recentDevices')||'[]');
function updateRecentDevicesUI(){
  const container=document.getElementById('recentDevices');
  container.innerHTML='';
  recentDevices.forEach(ip=>{
    const btn=document.createElement('button');
    btn.textContent=ip;
    btn.onclick=()=>{ initWebSocket('wifiDirect',ip); }
    container.appendChild(btn);
  });
}
updateRecentDevicesUI();
function addToRecentDevices(ip){
  if(!recentDevices.includes(ip)){
    recentDevices.unshift(ip);
    if(recentDevices.length>5) recentDevices.pop();
    localStorage.setItem('recentDevices',JSON.stringify(recentDevices));
    updateRecentDevicesUI();
  }
}

function sendMessage(){
  const input=document.getElementById('messageInput');
  const text=input.value.trim(); if(!text) return;
  addMessage(text,'sent'); if(socket) socket.send(text); input.value='';
}

function addMessage(text,type){
  const chat=document.getElementById('chat');
  const msg=document.createElement('div'); msg.className=`message ${type}`; msg.textContent=text;
  const ts=document.createElement('span'); ts.className='timestamp';
  const now=new Date(); ts.textContent=now.getHours().toString().padStart(2,'0')+':'+now.getMinutes().toString().padStart(2,'0');
  msg.appendChild(ts); chat.appendChild(msg); chat.scrollTop=chat.scrollHeight;
  if(type==='sent') showTypingIndicator(msg);
  let messages=JSON.parse(localStorage.getItem('bubbleMessages')||'[]');
  messages.push({text,type,timestamp:ts.textContent});
  localStorage.setItem('bubbleMessages',JSON.stringify(messages));
}

function loadMessages(){
  const chat=document.getElementById('chat');
  let messages=JSON.parse(localStorage.getItem('bubbleMessages')||'[]');
  messages.forEach(msg=>{
    const div=document.createElement('div'); div.className=`message ${msg.type}`; div.textContent=msg.text;
    const ts=document.createElement('span'); ts.className='timestamp'; ts.textContent=msg.timestamp;
    div.appendChild(ts); chat.appendChild(div);
  });
  chat.scrollTop=chat.scrollHeight;
}
window.addEventListener('load',loadMessages);

function showTypingIndicator(){
  const indicator=document.getElementById('typingIndicator');
  indicator.style.display='flex';
  setTimeout(()=>{indicator.style.display='none';},800);
}

let socket=null;
function initWebSocket(type,customIP){ console.log('WebSocket init',type,customIP); }
</script>
</body>
</html>
